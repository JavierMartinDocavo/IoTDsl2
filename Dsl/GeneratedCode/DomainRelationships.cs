//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace Compañía.IotDsl
{
	/// <summary>
	/// DomainRelationship IotDsl1TieneGrupoDeRecursos
	/// Descripción de Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos
	/// </summary>
	[DslDesign::DisplayNameResource("Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Compañía.IotDsl.IotDslDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("7aafb2c6-a999-48dd-a91d-5dd686b2a897")]
	public partial class IotDsl1TieneGrupoDeRecursos : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// IotDsl1TieneGrupoDeRecursos domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x7aafb2c6, 0xa999, 0x48dd, 0xa9, 0x1d, 0x5d, 0xd6, 0x86, 0xb2, 0xa8, 0x97);
	
				
		/// <summary>
		/// Constructor
		/// Creates a IotDsl1TieneGrupoDeRecursos link in the same Partition as the given IotDsl1
		/// </summary>
		/// <param name="source">IotDsl1 to use as the source of the relationship.</param>
		/// <param name="target">GrupoDeRecursos to use as the target of the relationship.</param>
		public IotDsl1TieneGrupoDeRecursos(IotDsl1 source, GrupoDeRecursos target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(IotDsl1TieneGrupoDeRecursos.IotDsl1DomainRoleId, source), new DslModeling::RoleAssignment(IotDsl1TieneGrupoDeRecursos.GrupoDeRecursosDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public IotDsl1TieneGrupoDeRecursos(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public IotDsl1TieneGrupoDeRecursos(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public IotDsl1TieneGrupoDeRecursos(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public IotDsl1TieneGrupoDeRecursos(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region IotDsl1 domain role code
		
		/// <summary>
		/// IotDsl1 domain role Id.
		/// </summary>
		public static readonly global::System.Guid IotDsl1DomainRoleId = new global::System.Guid(0x4ed6059c, 0x41c7, 0x41fc, 0x83, 0x26, 0x59, 0xd6, 0x32, 0x71, 0x35, 0x1a);
		
		/// <summary>
		/// DomainRole IotDsl1
		/// Descripción de Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos.IotDsl1
		/// </summary>
		[DslDesign::DisplayNameResource("Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos/IotDsl1.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos/IotDsl1.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "GrupoDeRecursos", PropertyDisplayNameKey="Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos/IotDsl1.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("4ed6059c-41c7-41fc-8326-59d63271351a")]
		public virtual IotDsl1 IotDsl1
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (IotDsl1)DslModeling::DomainRoleInfo.GetRolePlayer(this, IotDsl1DomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, IotDsl1DomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access IotDsl1 of a GrupoDeRecursos
		/// <summary>
		/// Gets IotDsl1.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static IotDsl1 GetIotDsl1(GrupoDeRecursos element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, GrupoDeRecursosDomainRoleId) as IotDsl1;
		}
		
		/// <summary>
		/// Sets IotDsl1.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetIotDsl1(GrupoDeRecursos element, IotDsl1 newIotDsl1)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, GrupoDeRecursosDomainRoleId, newIotDsl1);
		}
		#endregion
		#region GrupoDeRecursos domain role code
		
		/// <summary>
		/// GrupoDeRecursos domain role Id.
		/// </summary>
		public static readonly global::System.Guid GrupoDeRecursosDomainRoleId = new global::System.Guid(0x7b3da52c, 0x33aa, 0x44e4, 0x99, 0x81, 0x12, 0x42, 0xc4, 0xed, 0xba, 0x84);
		
		/// <summary>
		/// DomainRole GrupoDeRecursos
		/// Descripción de Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos.GrupoDeRecursos
		/// </summary>
		[DslDesign::DisplayNameResource("Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos/GrupoDeRecursos.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos/GrupoDeRecursos.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "IotDsl1", PropertyDisplayNameKey="Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos/GrupoDeRecursos.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("7b3da52c-33aa-44e4-9981-1242c4edba84")]
		public virtual GrupoDeRecursos GrupoDeRecursos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (GrupoDeRecursos)DslModeling::DomainRoleInfo.GetRolePlayer(this, GrupoDeRecursosDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, GrupoDeRecursosDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access GrupoDeRecursos of a IotDsl1
		/// <summary>
		/// Gets a list of GrupoDeRecursos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<GrupoDeRecursos> GetGrupoDeRecursos(IotDsl1 element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<GrupoDeRecursos>, GrupoDeRecursos>(element, IotDsl1DomainRoleId);
		}
		#endregion
		#region IotDsl1 link accessor
		/// <summary>
		/// Get the list of IotDsl1TieneGrupoDeRecursos links to a IotDsl1.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos> GetLinksToGrupoDeRecursos ( global::Compañía.IotDsl.IotDsl1 iotDsl1Instance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos>(iotDsl1Instance, global::Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos.IotDsl1DomainRoleId);
		}
		#endregion
		#region GrupoDeRecursos link accessor
		/// <summary>
		/// Get the IotDsl1TieneGrupoDeRecursos link to a GrupoDeRecursos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos GetLinkToIotDsl1 (global::Compañía.IotDsl.GrupoDeRecursos grupoDeRecursosInstance)
		{
			global::System.Collections.Generic.IList<global::Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos>(grupoDeRecursosInstance, global::Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos.GrupoDeRecursosDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of GrupoDeRecursos not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region IotDsl1TieneGrupoDeRecursos instance accessors
		
		/// <summary>
		/// Get any IotDsl1TieneGrupoDeRecursos links between a given IotDsl1 and a GrupoDeRecursos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos> GetLinks( global::Compañía.IotDsl.IotDsl1 source, global::Compañía.IotDsl.GrupoDeRecursos target )
		{
			global::System.Collections.Generic.List<global::Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos> outLinks = new global::System.Collections.Generic.List<global::Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos>();
			global::System.Collections.Generic.IList<global::Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos>(source, global::Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos.IotDsl1DomainRoleId);
			foreach ( global::Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos link in links )
			{
				if ( target.Equals(link.GrupoDeRecursos) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one IotDsl1TieneGrupoDeRecursos link between a given IotDsl1and a GrupoDeRecursos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos GetLink( global::Compañía.IotDsl.IotDsl1 source, global::Compañía.IotDsl.GrupoDeRecursos target )
		{
			global::System.Collections.Generic.IList<global::Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos>(source, global::Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos.IotDsl1DomainRoleId);
			foreach ( global::Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos link in links )
			{
				if ( target.Equals(link.GrupoDeRecursos) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace Compañía.IotDsl
{
	/// <summary>
	/// DomainRelationship GrupoDeRecursosTieneCentroIoT
	/// Descripción de Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT
	/// </summary>
	[DslDesign::DisplayNameResource("Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Compañía.IotDsl.IotDslDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("79b8c6cc-0624-4c3c-99cd-5a168a6c9ca3")]
	public partial class GrupoDeRecursosTieneCentroIoT : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// GrupoDeRecursosTieneCentroIoT domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x79b8c6cc, 0x0624, 0x4c3c, 0x99, 0xcd, 0x5a, 0x16, 0x8a, 0x6c, 0x9c, 0xa3);
	
				
		/// <summary>
		/// Constructor
		/// Creates a GrupoDeRecursosTieneCentroIoT link in the same Partition as the given GrupoDeRecursos
		/// </summary>
		/// <param name="source">GrupoDeRecursos to use as the source of the relationship.</param>
		/// <param name="target">CentroIoT to use as the target of the relationship.</param>
		public GrupoDeRecursosTieneCentroIoT(GrupoDeRecursos source, CentroIoT target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(GrupoDeRecursosTieneCentroIoT.GrupoDeRecursosDomainRoleId, source), new DslModeling::RoleAssignment(GrupoDeRecursosTieneCentroIoT.CentroIoTDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public GrupoDeRecursosTieneCentroIoT(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public GrupoDeRecursosTieneCentroIoT(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public GrupoDeRecursosTieneCentroIoT(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public GrupoDeRecursosTieneCentroIoT(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region GrupoDeRecursos domain role code
		
		/// <summary>
		/// GrupoDeRecursos domain role Id.
		/// </summary>
		public static readonly global::System.Guid GrupoDeRecursosDomainRoleId = new global::System.Guid(0xd724805d, 0xc88b, 0x4354, 0xbf, 0x67, 0x33, 0x3d, 0xbf, 0x57, 0x3a, 0x61);
		
		/// <summary>
		/// DomainRole GrupoDeRecursos
		/// Descripción de Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT.GrupoDeRecursos
		/// </summary>
		[DslDesign::DisplayNameResource("Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT/GrupoDeRecursos.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT/GrupoDeRecursos.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "CentroIoT", PropertyDisplayNameKey="Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT/GrupoDeRecursos.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("d724805d-c88b-4354-bf67-333dbf573a61")]
		public virtual GrupoDeRecursos GrupoDeRecursos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (GrupoDeRecursos)DslModeling::DomainRoleInfo.GetRolePlayer(this, GrupoDeRecursosDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, GrupoDeRecursosDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access GrupoDeRecursos of a CentroIoT
		/// <summary>
		/// Gets GrupoDeRecursos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static GrupoDeRecursos GetGrupoDeRecursos(CentroIoT element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, CentroIoTDomainRoleId) as GrupoDeRecursos;
		}
		
		/// <summary>
		/// Sets GrupoDeRecursos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetGrupoDeRecursos(CentroIoT element, GrupoDeRecursos newGrupoDeRecursos)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, CentroIoTDomainRoleId, newGrupoDeRecursos);
		}
		#endregion
		#region CentroIoT domain role code
		
		/// <summary>
		/// CentroIoT domain role Id.
		/// </summary>
		public static readonly global::System.Guid CentroIoTDomainRoleId = new global::System.Guid(0x8bce4ddb, 0x3934, 0x4e00, 0x98, 0xff, 0xba, 0x4e, 0x62, 0x90, 0x84, 0xc9);
		
		/// <summary>
		/// DomainRole CentroIoT
		/// Descripción de Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT.CentroIoT
		/// </summary>
		[DslDesign::DisplayNameResource("Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT/CentroIoT.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT/CentroIoT.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "GrupoDeRecursos", PropertyDisplayNameKey="Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT/CentroIoT.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("8bce4ddb-3934-4e00-98ff-ba4e629084c9")]
		public virtual CentroIoT CentroIoT
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (CentroIoT)DslModeling::DomainRoleInfo.GetRolePlayer(this, CentroIoTDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, CentroIoTDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access CentroIoT of a GrupoDeRecursos
		/// <summary>
		/// Gets a list of CentroIoT.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<CentroIoT> GetCentroIoT(GrupoDeRecursos element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<CentroIoT>, CentroIoT>(element, GrupoDeRecursosDomainRoleId);
		}
		#endregion
		#region GrupoDeRecursos link accessor
		/// <summary>
		/// Get the list of GrupoDeRecursosTieneCentroIoT links to a GrupoDeRecursos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT> GetLinksToCentroIoT ( global::Compañía.IotDsl.GrupoDeRecursos grupoDeRecursosInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT>(grupoDeRecursosInstance, global::Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT.GrupoDeRecursosDomainRoleId);
		}
		#endregion
		#region CentroIoT link accessor
		/// <summary>
		/// Get the GrupoDeRecursosTieneCentroIoT link to a CentroIoT.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT GetLinkToGrupoDeRecursos (global::Compañía.IotDsl.CentroIoT centroIoTInstance)
		{
			global::System.Collections.Generic.IList<global::Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT>(centroIoTInstance, global::Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT.CentroIoTDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of CentroIoT not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region GrupoDeRecursosTieneCentroIoT instance accessors
		
		/// <summary>
		/// Get any GrupoDeRecursosTieneCentroIoT links between a given GrupoDeRecursos and a CentroIoT.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT> GetLinks( global::Compañía.IotDsl.GrupoDeRecursos source, global::Compañía.IotDsl.CentroIoT target )
		{
			global::System.Collections.Generic.List<global::Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT> outLinks = new global::System.Collections.Generic.List<global::Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT>();
			global::System.Collections.Generic.IList<global::Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT>(source, global::Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT.GrupoDeRecursosDomainRoleId);
			foreach ( global::Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT link in links )
			{
				if ( target.Equals(link.CentroIoT) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one GrupoDeRecursosTieneCentroIoT link between a given GrupoDeRecursosand a CentroIoT.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT GetLink( global::Compañía.IotDsl.GrupoDeRecursos source, global::Compañía.IotDsl.CentroIoT target )
		{
			global::System.Collections.Generic.IList<global::Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT>(source, global::Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT.GrupoDeRecursosDomainRoleId);
			foreach ( global::Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT link in links )
			{
				if ( target.Equals(link.CentroIoT) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace Compañía.IotDsl
{
	/// <summary>
	/// DomainRelationship GrupoDeRecursosTieneMessagingasaService
	/// Descripción de Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService
	/// </summary>
	[DslDesign::DisplayNameResource("Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Compañía.IotDsl.IotDslDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("3b746ff3-8cfe-4f62-a3fc-c58ea4022c6b")]
	public partial class GrupoDeRecursosTieneMessagingasaService : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// GrupoDeRecursosTieneMessagingasaService domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x3b746ff3, 0x8cfe, 0x4f62, 0xa3, 0xfc, 0xc5, 0x8e, 0xa4, 0x02, 0x2c, 0x6b);
	
				
		/// <summary>
		/// Constructor
		/// Creates a GrupoDeRecursosTieneMessagingasaService link in the same Partition as the given GrupoDeRecursos
		/// </summary>
		/// <param name="source">GrupoDeRecursos to use as the source of the relationship.</param>
		/// <param name="target">MessagingasaService to use as the target of the relationship.</param>
		public GrupoDeRecursosTieneMessagingasaService(GrupoDeRecursos source, MessagingasaService target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(GrupoDeRecursosTieneMessagingasaService.GrupoDeRecursosDomainRoleId, source), new DslModeling::RoleAssignment(GrupoDeRecursosTieneMessagingasaService.MessagingasaServiceDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public GrupoDeRecursosTieneMessagingasaService(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public GrupoDeRecursosTieneMessagingasaService(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public GrupoDeRecursosTieneMessagingasaService(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public GrupoDeRecursosTieneMessagingasaService(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region GrupoDeRecursos domain role code
		
		/// <summary>
		/// GrupoDeRecursos domain role Id.
		/// </summary>
		public static readonly global::System.Guid GrupoDeRecursosDomainRoleId = new global::System.Guid(0xacc63f7d, 0x1a6a, 0x4067, 0xa9, 0x6b, 0x78, 0x93, 0x39, 0xff, 0xc9, 0xcf);
		
		/// <summary>
		/// DomainRole GrupoDeRecursos
		/// Descripción de
		/// Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService.GrupoDeRecursos
		/// </summary>
		[DslDesign::DisplayNameResource("Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService/GrupoDeRecursos.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService/GrupoDeRecursos.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "MessagingasaService", PropertyDisplayNameKey="Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService/GrupoDeRecursos.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("acc63f7d-1a6a-4067-a96b-789339ffc9cf")]
		public virtual GrupoDeRecursos GrupoDeRecursos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (GrupoDeRecursos)DslModeling::DomainRoleInfo.GetRolePlayer(this, GrupoDeRecursosDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, GrupoDeRecursosDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access GrupoDeRecursos of a MessagingasaService
		/// <summary>
		/// Gets GrupoDeRecursos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static GrupoDeRecursos GetGrupoDeRecursos(MessagingasaService element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, MessagingasaServiceDomainRoleId) as GrupoDeRecursos;
		}
		
		/// <summary>
		/// Sets GrupoDeRecursos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetGrupoDeRecursos(MessagingasaService element, GrupoDeRecursos newGrupoDeRecursos)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, MessagingasaServiceDomainRoleId, newGrupoDeRecursos);
		}
		#endregion
		#region MessagingasaService domain role code
		
		/// <summary>
		/// MessagingasaService domain role Id.
		/// </summary>
		public static readonly global::System.Guid MessagingasaServiceDomainRoleId = new global::System.Guid(0x2a8f543d, 0xc972, 0x4ec7, 0xb7, 0xa8, 0x6d, 0xb3, 0x31, 0xf8, 0xa6, 0x45);
		
		/// <summary>
		/// DomainRole MessagingasaService
		/// Descripción de
		/// Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService.MessagingasaService
		/// </summary>
		[DslDesign::DisplayNameResource("Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService/MessagingasaService.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService/MessagingasaService.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "GrupoDeRecursos", PropertyDisplayNameKey="Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService/MessagingasaService.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("2a8f543d-c972-4ec7-b7a8-6db331f8a645")]
		public virtual MessagingasaService MessagingasaService
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (MessagingasaService)DslModeling::DomainRoleInfo.GetRolePlayer(this, MessagingasaServiceDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, MessagingasaServiceDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access MessagingasaService of a GrupoDeRecursos
		/// <summary>
		/// Gets a list of MessagingasaService.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<MessagingasaService> GetMessagingasaService(GrupoDeRecursos element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<MessagingasaService>, MessagingasaService>(element, GrupoDeRecursosDomainRoleId);
		}
		#endregion
		#region GrupoDeRecursos link accessor
		/// <summary>
		/// Get the list of GrupoDeRecursosTieneMessagingasaService links to a GrupoDeRecursos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService> GetLinksToMessagingasaService ( global::Compañía.IotDsl.GrupoDeRecursos grupoDeRecursosInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService>(grupoDeRecursosInstance, global::Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService.GrupoDeRecursosDomainRoleId);
		}
		#endregion
		#region MessagingasaService link accessor
		/// <summary>
		/// Get the GrupoDeRecursosTieneMessagingasaService link to a MessagingasaService.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService GetLinkToGrupoDeRecursos (global::Compañía.IotDsl.MessagingasaService messagingasaServiceInstance)
		{
			global::System.Collections.Generic.IList<global::Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService>(messagingasaServiceInstance, global::Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService.MessagingasaServiceDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of MessagingasaService not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region GrupoDeRecursosTieneMessagingasaService instance accessors
		
		/// <summary>
		/// Get any GrupoDeRecursosTieneMessagingasaService links between a given GrupoDeRecursos and a MessagingasaService.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService> GetLinks( global::Compañía.IotDsl.GrupoDeRecursos source, global::Compañía.IotDsl.MessagingasaService target )
		{
			global::System.Collections.Generic.List<global::Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService> outLinks = new global::System.Collections.Generic.List<global::Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService>();
			global::System.Collections.Generic.IList<global::Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService>(source, global::Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService.GrupoDeRecursosDomainRoleId);
			foreach ( global::Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService link in links )
			{
				if ( target.Equals(link.MessagingasaService) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one GrupoDeRecursosTieneMessagingasaService link between a given GrupoDeRecursosand a MessagingasaService.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService GetLink( global::Compañía.IotDsl.GrupoDeRecursos source, global::Compañía.IotDsl.MessagingasaService target )
		{
			global::System.Collections.Generic.IList<global::Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService>(source, global::Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService.GrupoDeRecursosDomainRoleId);
			foreach ( global::Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService link in links )
			{
				if ( target.Equals(link.MessagingasaService) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace Compañía.IotDsl
{
	/// <summary>
	/// DomainRelationship CentroIoTReferenciasMessagingasaService
	/// Descripción de Compañía.IotDsl.CentroIoTReferenciasMessagingasaService
	/// </summary>
	[DslDesign::DisplayNameResource("Compañía.IotDsl.CentroIoTReferenciasMessagingasaService.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Compañía.IotDsl.CentroIoTReferenciasMessagingasaService.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Compañía.IotDsl.IotDslDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("2da61e46-cee3-4797-a3ac-0d914b941236")]
	public partial class CentroIoTReferenciasMessagingasaService : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// CentroIoTReferenciasMessagingasaService domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x2da61e46, 0xcee3, 0x4797, 0xa3, 0xac, 0x0d, 0x91, 0x4b, 0x94, 0x12, 0x36);
	
				
		/// <summary>
		/// Constructor
		/// Creates a CentroIoTReferenciasMessagingasaService link in the same Partition as the given CentroIoT
		/// </summary>
		/// <param name="source">CentroIoT to use as the source of the relationship.</param>
		/// <param name="target">MessagingasaService to use as the target of the relationship.</param>
		public CentroIoTReferenciasMessagingasaService(CentroIoT source, MessagingasaService target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(CentroIoTReferenciasMessagingasaService.CentroIoTDomainRoleId, source), new DslModeling::RoleAssignment(CentroIoTReferenciasMessagingasaService.MessagingasaServiceDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public CentroIoTReferenciasMessagingasaService(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public CentroIoTReferenciasMessagingasaService(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public CentroIoTReferenciasMessagingasaService(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public CentroIoTReferenciasMessagingasaService(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region CentroIoT domain role code
		
		/// <summary>
		/// CentroIoT domain role Id.
		/// </summary>
		public static readonly global::System.Guid CentroIoTDomainRoleId = new global::System.Guid(0xd1bc691d, 0xde34, 0x43de, 0x9c, 0xe0, 0xd2, 0x5c, 0x0d, 0x25, 0x0f, 0x50);
		
		/// <summary>
		/// DomainRole CentroIoT
		/// Descripción de Compañía.IotDsl.CentroIoTReferenciasMessagingasaService.CentroIoT
		/// </summary>
		[DslDesign::DisplayNameResource("Compañía.IotDsl.CentroIoTReferenciasMessagingasaService/CentroIoT.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Compañía.IotDsl.CentroIoTReferenciasMessagingasaService/CentroIoT.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "MessagingasaService", PropertyDisplayNameKey="Compañía.IotDsl.CentroIoTReferenciasMessagingasaService/CentroIoT.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroOne)]
		[DslModeling::DomainObjectId("d1bc691d-de34-43de-9ce0-d25c0d250f50")]
		public virtual CentroIoT CentroIoT
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (CentroIoT)DslModeling::DomainRoleInfo.GetRolePlayer(this, CentroIoTDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, CentroIoTDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access CentroIoT of a MessagingasaService
		/// <summary>
		/// Gets a list of CentroIoT.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<CentroIoT> GetCentroIoT(MessagingasaService element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<CentroIoT>, CentroIoT>(element, MessagingasaServiceDomainRoleId);
		}
		#endregion
		#region MessagingasaService domain role code
		
		/// <summary>
		/// MessagingasaService domain role Id.
		/// </summary>
		public static readonly global::System.Guid MessagingasaServiceDomainRoleId = new global::System.Guid(0xa39667e7, 0x1242, 0x4de5, 0xae, 0x43, 0x1e, 0xa6, 0xfd, 0x70, 0xb5, 0x02);
		
		/// <summary>
		/// DomainRole MessagingasaService
		/// Descripción de
		/// Compañía.IotDsl.CentroIoTReferenciasMessagingasaService.MessagingasaService
		/// </summary>
		[DslDesign::DisplayNameResource("Compañía.IotDsl.CentroIoTReferenciasMessagingasaService/MessagingasaService.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Compañía.IotDsl.CentroIoTReferenciasMessagingasaService/MessagingasaService.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "CentroIoT", PropertyDisplayNameKey="Compañía.IotDsl.CentroIoTReferenciasMessagingasaService/MessagingasaService.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("a39667e7-1242-4de5-ae43-1ea6fd70b502")]
		public virtual MessagingasaService MessagingasaService
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (MessagingasaService)DslModeling::DomainRoleInfo.GetRolePlayer(this, MessagingasaServiceDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, MessagingasaServiceDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access MessagingasaService of a CentroIoT
		/// <summary>
		/// Gets MessagingasaService.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static MessagingasaService GetMessagingasaService(CentroIoT element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, CentroIoTDomainRoleId) as MessagingasaService;
		}
		
		/// <summary>
		/// Sets MessagingasaService.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetMessagingasaService(CentroIoT element, MessagingasaService newMessagingasaService)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, CentroIoTDomainRoleId, newMessagingasaService);
		}
		#endregion
		#region CentroIoT link accessor
		/// <summary>
		/// Get the CentroIoTReferenciasMessagingasaService link to a CentroIoT.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Compañía.IotDsl.CentroIoTReferenciasMessagingasaService GetLinkToMessagingasaService (global::Compañía.IotDsl.CentroIoT centroIoTInstance)
		{
			global::System.Collections.Generic.IList<global::Compañía.IotDsl.CentroIoTReferenciasMessagingasaService> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.CentroIoTReferenciasMessagingasaService>(centroIoTInstance, global::Compañía.IotDsl.CentroIoTReferenciasMessagingasaService.CentroIoTDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of CentroIoT not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region MessagingasaService link accessor
		/// <summary>
		/// Get the list of CentroIoTReferenciasMessagingasaService links to a MessagingasaService.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Compañía.IotDsl.CentroIoTReferenciasMessagingasaService> GetLinksToCentroIoT ( global::Compañía.IotDsl.MessagingasaService messagingasaServiceInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.CentroIoTReferenciasMessagingasaService>(messagingasaServiceInstance, global::Compañía.IotDsl.CentroIoTReferenciasMessagingasaService.MessagingasaServiceDomainRoleId);
		}
		#endregion
		#region CentroIoTReferenciasMessagingasaService instance accessors
		
		/// <summary>
		/// Get any CentroIoTReferenciasMessagingasaService links between a given CentroIoT and a MessagingasaService.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Compañía.IotDsl.CentroIoTReferenciasMessagingasaService> GetLinks( global::Compañía.IotDsl.CentroIoT source, global::Compañía.IotDsl.MessagingasaService target )
		{
			global::System.Collections.Generic.List<global::Compañía.IotDsl.CentroIoTReferenciasMessagingasaService> outLinks = new global::System.Collections.Generic.List<global::Compañía.IotDsl.CentroIoTReferenciasMessagingasaService>();
			global::System.Collections.Generic.IList<global::Compañía.IotDsl.CentroIoTReferenciasMessagingasaService> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.CentroIoTReferenciasMessagingasaService>(source, global::Compañía.IotDsl.CentroIoTReferenciasMessagingasaService.CentroIoTDomainRoleId);
			foreach ( global::Compañía.IotDsl.CentroIoTReferenciasMessagingasaService link in links )
			{
				if ( target.Equals(link.MessagingasaService) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one CentroIoTReferenciasMessagingasaService link between a given CentroIoTand a MessagingasaService.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Compañía.IotDsl.CentroIoTReferenciasMessagingasaService GetLink( global::Compañía.IotDsl.CentroIoT source, global::Compañía.IotDsl.MessagingasaService target )
		{
			global::System.Collections.Generic.IList<global::Compañía.IotDsl.CentroIoTReferenciasMessagingasaService> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.CentroIoTReferenciasMessagingasaService>(source, global::Compañía.IotDsl.CentroIoTReferenciasMessagingasaService.CentroIoTDomainRoleId);
			foreach ( global::Compañía.IotDsl.CentroIoTReferenciasMessagingasaService link in links )
			{
				if ( target.Equals(link.MessagingasaService) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace Compañía.IotDsl
{
	/// <summary>
	/// DomainRelationship GrupoDeRecursosTieneDataAnalytics
	/// Descripción de Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics
	/// </summary>
	[DslDesign::DisplayNameResource("Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Compañía.IotDsl.IotDslDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("1b9fae46-85f1-4de3-bb51-e4adac5b1f2e")]
	public partial class GrupoDeRecursosTieneDataAnalytics : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// GrupoDeRecursosTieneDataAnalytics domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x1b9fae46, 0x85f1, 0x4de3, 0xbb, 0x51, 0xe4, 0xad, 0xac, 0x5b, 0x1f, 0x2e);
	
				
		/// <summary>
		/// Constructor
		/// Creates a GrupoDeRecursosTieneDataAnalytics link in the same Partition as the given GrupoDeRecursos
		/// </summary>
		/// <param name="source">GrupoDeRecursos to use as the source of the relationship.</param>
		/// <param name="target">DataAnalytics to use as the target of the relationship.</param>
		public GrupoDeRecursosTieneDataAnalytics(GrupoDeRecursos source, DataAnalytics target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(GrupoDeRecursosTieneDataAnalytics.GrupoDeRecursosDomainRoleId, source), new DslModeling::RoleAssignment(GrupoDeRecursosTieneDataAnalytics.DataAnalyticsDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public GrupoDeRecursosTieneDataAnalytics(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public GrupoDeRecursosTieneDataAnalytics(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public GrupoDeRecursosTieneDataAnalytics(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public GrupoDeRecursosTieneDataAnalytics(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region GrupoDeRecursos domain role code
		
		/// <summary>
		/// GrupoDeRecursos domain role Id.
		/// </summary>
		public static readonly global::System.Guid GrupoDeRecursosDomainRoleId = new global::System.Guid(0xaf2dbaf1, 0x305d, 0x4656, 0x99, 0x07, 0xae, 0xf1, 0xb9, 0x55, 0x96, 0x59);
		
		/// <summary>
		/// DomainRole GrupoDeRecursos
		/// Descripción de Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics.GrupoDeRecursos
		/// </summary>
		[DslDesign::DisplayNameResource("Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics/GrupoDeRecursos.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics/GrupoDeRecursos.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "DataAnalytics", PropertyDisplayNameKey="Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics/GrupoDeRecursos.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("af2dbaf1-305d-4656-9907-aef1b9559659")]
		public virtual GrupoDeRecursos GrupoDeRecursos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (GrupoDeRecursos)DslModeling::DomainRoleInfo.GetRolePlayer(this, GrupoDeRecursosDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, GrupoDeRecursosDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access GrupoDeRecursos of a DataAnalytics
		/// <summary>
		/// Gets GrupoDeRecursos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static GrupoDeRecursos GetGrupoDeRecursos(DataAnalytics element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, DataAnalyticsDomainRoleId) as GrupoDeRecursos;
		}
		
		/// <summary>
		/// Sets GrupoDeRecursos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetGrupoDeRecursos(DataAnalytics element, GrupoDeRecursos newGrupoDeRecursos)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, DataAnalyticsDomainRoleId, newGrupoDeRecursos);
		}
		#endregion
		#region DataAnalytics domain role code
		
		/// <summary>
		/// DataAnalytics domain role Id.
		/// </summary>
		public static readonly global::System.Guid DataAnalyticsDomainRoleId = new global::System.Guid(0x7a1f4bb8, 0xd91d, 0x4880, 0x8f, 0xb8, 0xee, 0x20, 0x82, 0x5d, 0x37, 0xfd);
		
		/// <summary>
		/// DomainRole DataAnalytics
		/// Descripción de Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics.DataAnalytics
		/// </summary>
		[DslDesign::DisplayNameResource("Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics/DataAnalytics.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics/DataAnalytics.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "GrupoDeRecursos", PropertyDisplayNameKey="Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics/DataAnalytics.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("7a1f4bb8-d91d-4880-8fb8-ee20825d37fd")]
		public virtual DataAnalytics DataAnalytics
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (DataAnalytics)DslModeling::DomainRoleInfo.GetRolePlayer(this, DataAnalyticsDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, DataAnalyticsDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access DataAnalytics of a GrupoDeRecursos
		/// <summary>
		/// Gets a list of DataAnalytics.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<DataAnalytics> GetDataAnalytics(GrupoDeRecursos element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<DataAnalytics>, DataAnalytics>(element, GrupoDeRecursosDomainRoleId);
		}
		#endregion
		#region GrupoDeRecursos link accessor
		/// <summary>
		/// Get the list of GrupoDeRecursosTieneDataAnalytics links to a GrupoDeRecursos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics> GetLinksToDataAnalytics ( global::Compañía.IotDsl.GrupoDeRecursos grupoDeRecursosInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics>(grupoDeRecursosInstance, global::Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics.GrupoDeRecursosDomainRoleId);
		}
		#endregion
		#region DataAnalytics link accessor
		/// <summary>
		/// Get the GrupoDeRecursosTieneDataAnalytics link to a DataAnalytics.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics GetLinkToGrupoDeRecursos (global::Compañía.IotDsl.DataAnalytics dataAnalyticsInstance)
		{
			global::System.Collections.Generic.IList<global::Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics>(dataAnalyticsInstance, global::Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics.DataAnalyticsDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of DataAnalytics not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region GrupoDeRecursosTieneDataAnalytics instance accessors
		
		/// <summary>
		/// Get any GrupoDeRecursosTieneDataAnalytics links between a given GrupoDeRecursos and a DataAnalytics.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics> GetLinks( global::Compañía.IotDsl.GrupoDeRecursos source, global::Compañía.IotDsl.DataAnalytics target )
		{
			global::System.Collections.Generic.List<global::Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics> outLinks = new global::System.Collections.Generic.List<global::Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics>();
			global::System.Collections.Generic.IList<global::Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics>(source, global::Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics.GrupoDeRecursosDomainRoleId);
			foreach ( global::Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics link in links )
			{
				if ( target.Equals(link.DataAnalytics) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one GrupoDeRecursosTieneDataAnalytics link between a given GrupoDeRecursosand a DataAnalytics.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics GetLink( global::Compañía.IotDsl.GrupoDeRecursos source, global::Compañía.IotDsl.DataAnalytics target )
		{
			global::System.Collections.Generic.IList<global::Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics>(source, global::Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics.GrupoDeRecursosDomainRoleId);
			foreach ( global::Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics link in links )
			{
				if ( target.Equals(link.DataAnalytics) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace Compañía.IotDsl
{
	/// <summary>
	/// DomainRelationship EntradaIotHub
	/// Descripción de Compañía.IotDsl.EntradaIotHub
	/// </summary>
	[DslDesign::DisplayNameResource("Compañía.IotDsl.EntradaIotHub.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Compañía.IotDsl.EntradaIotHub.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Compañía.IotDsl.IotDslDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("a5b1bdd3-f347-436e-9ac7-9db3300aff53")]
	public partial class EntradaIotHub : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// EntradaIotHub domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xa5b1bdd3, 0xf347, 0x436e, 0x9a, 0xc7, 0x9d, 0xb3, 0x30, 0x0a, 0xff, 0x53);
	
				
		/// <summary>
		/// Constructor
		/// Creates a EntradaIotHub link in the same Partition as the given DataAnalytics
		/// </summary>
		/// <param name="source">DataAnalytics to use as the source of the relationship.</param>
		/// <param name="target">CentroIoT to use as the target of the relationship.</param>
		public EntradaIotHub(DataAnalytics source, CentroIoT target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(EntradaIotHub.DataAnalyticsDomainRoleId, source), new DslModeling::RoleAssignment(EntradaIotHub.CentroIoTDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public EntradaIotHub(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public EntradaIotHub(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public EntradaIotHub(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public EntradaIotHub(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region DataAnalytics domain role code
		
		/// <summary>
		/// DataAnalytics domain role Id.
		/// </summary>
		public static readonly global::System.Guid DataAnalyticsDomainRoleId = new global::System.Guid(0x376cf7be, 0x8eea, 0x48d0, 0x95, 0x5d, 0x6d, 0xfe, 0x87, 0xfc, 0x08, 0x52);
		
		/// <summary>
		/// DomainRole DataAnalytics
		/// Descripción de Compañía.IotDsl.EntradaIotHub.DataAnalytics
		/// </summary>
		[DslDesign::DisplayNameResource("Compañía.IotDsl.EntradaIotHub/DataAnalytics.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Compañía.IotDsl.EntradaIotHub/DataAnalytics.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "CentroIoT", PropertyDisplayNameKey="Compañía.IotDsl.EntradaIotHub/DataAnalytics.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("376cf7be-8eea-48d0-955d-6dfe87fc0852")]
		public virtual DataAnalytics DataAnalytics
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (DataAnalytics)DslModeling::DomainRoleInfo.GetRolePlayer(this, DataAnalyticsDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, DataAnalyticsDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access DataAnalytics of a CentroIoT
		/// <summary>
		/// Gets a list of DataAnalytics.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<DataAnalytics> GetDataAnalytics(CentroIoT element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<DataAnalytics>, DataAnalytics>(element, CentroIoTDomainRoleId);
		}
		#endregion
		#region CentroIoT domain role code
		
		/// <summary>
		/// CentroIoT domain role Id.
		/// </summary>
		public static readonly global::System.Guid CentroIoTDomainRoleId = new global::System.Guid(0x5e3c41f9, 0xf359, 0x4ec4, 0x84, 0x8f, 0xc3, 0x0b, 0x35, 0xae, 0x81, 0x0a);
		
		/// <summary>
		/// DomainRole CentroIoT
		/// Descripción de Compañía.IotDsl.EntradaIotHub.CentroIoT
		/// </summary>
		[DslDesign::DisplayNameResource("Compañía.IotDsl.EntradaIotHub/CentroIoT.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Compañía.IotDsl.EntradaIotHub/CentroIoT.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "DataAnalytics", PropertyDisplayNameKey="Compañía.IotDsl.EntradaIotHub/CentroIoT.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("5e3c41f9-f359-4ec4-848f-c30b35ae810a")]
		public virtual CentroIoT CentroIoT
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (CentroIoT)DslModeling::DomainRoleInfo.GetRolePlayer(this, CentroIoTDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, CentroIoTDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access CentroIoT of a DataAnalytics
		/// <summary>
		/// Gets a list of CentroIoT.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<CentroIoT> GetCentroIoT(DataAnalytics element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<CentroIoT>, CentroIoT>(element, DataAnalyticsDomainRoleId);
		}
		#endregion
		#region DataAnalytics link accessor
		/// <summary>
		/// Get the list of EntradaIotHub links to a DataAnalytics.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Compañía.IotDsl.EntradaIotHub> GetLinksToCentroIoT ( global::Compañía.IotDsl.DataAnalytics dataAnalyticsInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.EntradaIotHub>(dataAnalyticsInstance, global::Compañía.IotDsl.EntradaIotHub.DataAnalyticsDomainRoleId);
		}
		#endregion
		#region CentroIoT link accessor
		/// <summary>
		/// Get the list of EntradaIotHub links to a CentroIoT.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Compañía.IotDsl.EntradaIotHub> GetLinksToDataAnalytics ( global::Compañía.IotDsl.CentroIoT centroIoTInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.EntradaIotHub>(centroIoTInstance, global::Compañía.IotDsl.EntradaIotHub.CentroIoTDomainRoleId);
		}
		#endregion
		#region EntradaIotHub instance accessors
		
		/// <summary>
		/// Get any EntradaIotHub links between a given DataAnalytics and a CentroIoT.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Compañía.IotDsl.EntradaIotHub> GetLinks( global::Compañía.IotDsl.DataAnalytics source, global::Compañía.IotDsl.CentroIoT target )
		{
			global::System.Collections.Generic.List<global::Compañía.IotDsl.EntradaIotHub> outLinks = new global::System.Collections.Generic.List<global::Compañía.IotDsl.EntradaIotHub>();
			global::System.Collections.Generic.IList<global::Compañía.IotDsl.EntradaIotHub> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.EntradaIotHub>(source, global::Compañía.IotDsl.EntradaIotHub.DataAnalyticsDomainRoleId);
			foreach ( global::Compañía.IotDsl.EntradaIotHub link in links )
			{
				if ( target.Equals(link.CentroIoT) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one EntradaIotHub link between a given DataAnalyticsand a CentroIoT.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Compañía.IotDsl.EntradaIotHub GetLink( global::Compañía.IotDsl.DataAnalytics source, global::Compañía.IotDsl.CentroIoT target )
		{
			global::System.Collections.Generic.IList<global::Compañía.IotDsl.EntradaIotHub> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.EntradaIotHub>(source, global::Compañía.IotDsl.EntradaIotHub.DataAnalyticsDomainRoleId);
			foreach ( global::Compañía.IotDsl.EntradaIotHub link in links )
			{
				if ( target.Equals(link.CentroIoT) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace Compañía.IotDsl
{
	/// <summary>
	/// DomainRelationship GrupoDeRecursosTieneAlmacenamientoNoSQL
	/// Descripción de Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL
	/// </summary>
	[DslDesign::DisplayNameResource("Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Compañía.IotDsl.IotDslDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("28745ab1-59d3-4f40-8042-a8ef463b98b3")]
	public partial class GrupoDeRecursosTieneAlmacenamientoNoSQL : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// GrupoDeRecursosTieneAlmacenamientoNoSQL domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x28745ab1, 0x59d3, 0x4f40, 0x80, 0x42, 0xa8, 0xef, 0x46, 0x3b, 0x98, 0xb3);
	
				
		/// <summary>
		/// Constructor
		/// Creates a GrupoDeRecursosTieneAlmacenamientoNoSQL link in the same Partition as the given GrupoDeRecursos
		/// </summary>
		/// <param name="source">GrupoDeRecursos to use as the source of the relationship.</param>
		/// <param name="target">AlmacenamientoNoSQL to use as the target of the relationship.</param>
		public GrupoDeRecursosTieneAlmacenamientoNoSQL(GrupoDeRecursos source, AlmacenamientoNoSQL target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(GrupoDeRecursosTieneAlmacenamientoNoSQL.GrupoDeRecursosDomainRoleId, source), new DslModeling::RoleAssignment(GrupoDeRecursosTieneAlmacenamientoNoSQL.AlmacenamientoNoSQLDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public GrupoDeRecursosTieneAlmacenamientoNoSQL(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public GrupoDeRecursosTieneAlmacenamientoNoSQL(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public GrupoDeRecursosTieneAlmacenamientoNoSQL(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public GrupoDeRecursosTieneAlmacenamientoNoSQL(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region GrupoDeRecursos domain role code
		
		/// <summary>
		/// GrupoDeRecursos domain role Id.
		/// </summary>
		public static readonly global::System.Guid GrupoDeRecursosDomainRoleId = new global::System.Guid(0xcf820894, 0x4817, 0x446d, 0x83, 0x1f, 0xea, 0xfb, 0xc6, 0x7a, 0x52, 0x90);
		
		/// <summary>
		/// DomainRole GrupoDeRecursos
		/// Descripción de
		/// Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL.GrupoDeRecursos
		/// </summary>
		[DslDesign::DisplayNameResource("Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL/GrupoDeRecursos.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL/GrupoDeRecursos.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "AlmacenamientoNoSQL", PropertyDisplayNameKey="Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL/GrupoDeRecursos.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("cf820894-4817-446d-831f-eafbc67a5290")]
		public virtual GrupoDeRecursos GrupoDeRecursos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (GrupoDeRecursos)DslModeling::DomainRoleInfo.GetRolePlayer(this, GrupoDeRecursosDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, GrupoDeRecursosDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access GrupoDeRecursos of a AlmacenamientoNoSQL
		/// <summary>
		/// Gets GrupoDeRecursos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static GrupoDeRecursos GetGrupoDeRecursos(AlmacenamientoNoSQL element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, AlmacenamientoNoSQLDomainRoleId) as GrupoDeRecursos;
		}
		
		/// <summary>
		/// Sets GrupoDeRecursos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetGrupoDeRecursos(AlmacenamientoNoSQL element, GrupoDeRecursos newGrupoDeRecursos)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, AlmacenamientoNoSQLDomainRoleId, newGrupoDeRecursos);
		}
		#endregion
		#region AlmacenamientoNoSQL domain role code
		
		/// <summary>
		/// AlmacenamientoNoSQL domain role Id.
		/// </summary>
		public static readonly global::System.Guid AlmacenamientoNoSQLDomainRoleId = new global::System.Guid(0xa17dc33e, 0x2c60, 0x48ef, 0xbe, 0x8a, 0x84, 0xe9, 0x7a, 0xf6, 0x4d, 0x20);
		
		/// <summary>
		/// DomainRole AlmacenamientoNoSQL
		/// Descripción de
		/// Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL.AlmacenamientoNoSQL
		/// </summary>
		[DslDesign::DisplayNameResource("Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL/AlmacenamientoNoSQL.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL/AlmacenamientoNoSQL.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "GrupoDeRecursos", PropertyDisplayNameKey="Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL/AlmacenamientoNoSQL.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("a17dc33e-2c60-48ef-be8a-84e97af64d20")]
		public virtual AlmacenamientoNoSQL AlmacenamientoNoSQL
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (AlmacenamientoNoSQL)DslModeling::DomainRoleInfo.GetRolePlayer(this, AlmacenamientoNoSQLDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, AlmacenamientoNoSQLDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access AlmacenamientoNoSQL of a GrupoDeRecursos
		/// <summary>
		/// Gets a list of AlmacenamientoNoSQL.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<AlmacenamientoNoSQL> GetAlmacenamientoNoSQL(GrupoDeRecursos element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<AlmacenamientoNoSQL>, AlmacenamientoNoSQL>(element, GrupoDeRecursosDomainRoleId);
		}
		#endregion
		#region GrupoDeRecursos link accessor
		/// <summary>
		/// Get the list of GrupoDeRecursosTieneAlmacenamientoNoSQL links to a GrupoDeRecursos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL> GetLinksToAlmacenamientoNoSQL ( global::Compañía.IotDsl.GrupoDeRecursos grupoDeRecursosInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL>(grupoDeRecursosInstance, global::Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL.GrupoDeRecursosDomainRoleId);
		}
		#endregion
		#region AlmacenamientoNoSQL link accessor
		/// <summary>
		/// Get the GrupoDeRecursosTieneAlmacenamientoNoSQL link to a AlmacenamientoNoSQL.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL GetLinkToGrupoDeRecursos (global::Compañía.IotDsl.AlmacenamientoNoSQL almacenamientoNoSQLInstance)
		{
			global::System.Collections.Generic.IList<global::Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL>(almacenamientoNoSQLInstance, global::Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL.AlmacenamientoNoSQLDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of AlmacenamientoNoSQL not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region GrupoDeRecursosTieneAlmacenamientoNoSQL instance accessors
		
		/// <summary>
		/// Get any GrupoDeRecursosTieneAlmacenamientoNoSQL links between a given GrupoDeRecursos and a AlmacenamientoNoSQL.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL> GetLinks( global::Compañía.IotDsl.GrupoDeRecursos source, global::Compañía.IotDsl.AlmacenamientoNoSQL target )
		{
			global::System.Collections.Generic.List<global::Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL> outLinks = new global::System.Collections.Generic.List<global::Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL>();
			global::System.Collections.Generic.IList<global::Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL>(source, global::Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL.GrupoDeRecursosDomainRoleId);
			foreach ( global::Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL link in links )
			{
				if ( target.Equals(link.AlmacenamientoNoSQL) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one GrupoDeRecursosTieneAlmacenamientoNoSQL link between a given GrupoDeRecursosand a AlmacenamientoNoSQL.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL GetLink( global::Compañía.IotDsl.GrupoDeRecursos source, global::Compañía.IotDsl.AlmacenamientoNoSQL target )
		{
			global::System.Collections.Generic.IList<global::Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL>(source, global::Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL.GrupoDeRecursosDomainRoleId);
			foreach ( global::Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL link in links )
			{
				if ( target.Equals(link.AlmacenamientoNoSQL) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace Compañía.IotDsl
{
	/// <summary>
	/// DomainRelationship SalidaAlmacenamientoNoSQL
	/// Descripción de Compañía.IotDsl.SalidaAlmacenamientoNoSQL
	/// </summary>
	[DslDesign::DisplayNameResource("Compañía.IotDsl.SalidaAlmacenamientoNoSQL.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Compañía.IotDsl.SalidaAlmacenamientoNoSQL.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Compañía.IotDsl.IotDslDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("d767c1df-647c-4e33-b302-8dbeafc2fe49")]
	public partial class SalidaAlmacenamientoNoSQL : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// SalidaAlmacenamientoNoSQL domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xd767c1df, 0x647c, 0x4e33, 0xb3, 0x02, 0x8d, 0xbe, 0xaf, 0xc2, 0xfe, 0x49);
	
				
		/// <summary>
		/// Constructor
		/// Creates a SalidaAlmacenamientoNoSQL link in the same Partition as the given DataAnalytics
		/// </summary>
		/// <param name="source">DataAnalytics to use as the source of the relationship.</param>
		/// <param name="target">AlmacenamientoNoSQL to use as the target of the relationship.</param>
		public SalidaAlmacenamientoNoSQL(DataAnalytics source, AlmacenamientoNoSQL target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(SalidaAlmacenamientoNoSQL.DataAnalyticsDomainRoleId, source), new DslModeling::RoleAssignment(SalidaAlmacenamientoNoSQL.AlmacenamientoNoSQLDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public SalidaAlmacenamientoNoSQL(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public SalidaAlmacenamientoNoSQL(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public SalidaAlmacenamientoNoSQL(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public SalidaAlmacenamientoNoSQL(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region DataAnalytics domain role code
		
		/// <summary>
		/// DataAnalytics domain role Id.
		/// </summary>
		public static readonly global::System.Guid DataAnalyticsDomainRoleId = new global::System.Guid(0xbcae6027, 0x0983, 0x4579, 0x9e, 0xce, 0xad, 0x7e, 0x4c, 0xd1, 0xde, 0x12);
		
		/// <summary>
		/// DomainRole DataAnalytics
		/// Descripción de Compañía.IotDsl.SalidaAlmacenamientoNoSQL.DataAnalytics
		/// </summary>
		[DslDesign::DisplayNameResource("Compañía.IotDsl.SalidaAlmacenamientoNoSQL/DataAnalytics.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Compañía.IotDsl.SalidaAlmacenamientoNoSQL/DataAnalytics.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "AlmacenamientoNoSQL", PropertyDisplayNameKey="Compañía.IotDsl.SalidaAlmacenamientoNoSQL/DataAnalytics.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("bcae6027-0983-4579-9ece-ad7e4cd1de12")]
		public virtual DataAnalytics DataAnalytics
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (DataAnalytics)DslModeling::DomainRoleInfo.GetRolePlayer(this, DataAnalyticsDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, DataAnalyticsDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access DataAnalytics of a AlmacenamientoNoSQL
		/// <summary>
		/// Gets a list of DataAnalytics.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<DataAnalytics> GetDataAnalytics(AlmacenamientoNoSQL element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<DataAnalytics>, DataAnalytics>(element, AlmacenamientoNoSQLDomainRoleId);
		}
		#endregion
		#region AlmacenamientoNoSQL domain role code
		
		/// <summary>
		/// AlmacenamientoNoSQL domain role Id.
		/// </summary>
		public static readonly global::System.Guid AlmacenamientoNoSQLDomainRoleId = new global::System.Guid(0x50b00f13, 0x02c5, 0x4a1e, 0x9d, 0xcc, 0xd3, 0x81, 0xa1, 0x49, 0x08, 0x2a);
		
		/// <summary>
		/// DomainRole AlmacenamientoNoSQL
		/// Descripción de Compañía.IotDsl.SalidaAlmacenamientoNoSQL.AlmacenamientoNoSQL
		/// </summary>
		[DslDesign::DisplayNameResource("Compañía.IotDsl.SalidaAlmacenamientoNoSQL/AlmacenamientoNoSQL.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Compañía.IotDsl.SalidaAlmacenamientoNoSQL/AlmacenamientoNoSQL.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "DataAnalytics", PropertyDisplayNameKey="Compañía.IotDsl.SalidaAlmacenamientoNoSQL/AlmacenamientoNoSQL.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("50b00f13-02c5-4a1e-9dcc-d381a149082a")]
		public virtual AlmacenamientoNoSQL AlmacenamientoNoSQL
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (AlmacenamientoNoSQL)DslModeling::DomainRoleInfo.GetRolePlayer(this, AlmacenamientoNoSQLDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, AlmacenamientoNoSQLDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access AlmacenamientoNoSQL of a DataAnalytics
		/// <summary>
		/// Gets a list of AlmacenamientoNoSQL.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<AlmacenamientoNoSQL> GetAlmacenamientoNoSQL(DataAnalytics element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<AlmacenamientoNoSQL>, AlmacenamientoNoSQL>(element, DataAnalyticsDomainRoleId);
		}
		#endregion
		#region DataAnalytics link accessor
		/// <summary>
		/// Get the list of SalidaAlmacenamientoNoSQL links to a DataAnalytics.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Compañía.IotDsl.SalidaAlmacenamientoNoSQL> GetLinksToAlmacenamientoNoSQL ( global::Compañía.IotDsl.DataAnalytics dataAnalyticsInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.SalidaAlmacenamientoNoSQL>(dataAnalyticsInstance, global::Compañía.IotDsl.SalidaAlmacenamientoNoSQL.DataAnalyticsDomainRoleId);
		}
		#endregion
		#region AlmacenamientoNoSQL link accessor
		/// <summary>
		/// Get the list of SalidaAlmacenamientoNoSQL links to a AlmacenamientoNoSQL.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Compañía.IotDsl.SalidaAlmacenamientoNoSQL> GetLinksToDataAnalytics ( global::Compañía.IotDsl.AlmacenamientoNoSQL almacenamientoNoSQLInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.SalidaAlmacenamientoNoSQL>(almacenamientoNoSQLInstance, global::Compañía.IotDsl.SalidaAlmacenamientoNoSQL.AlmacenamientoNoSQLDomainRoleId);
		}
		#endregion
		#region SalidaAlmacenamientoNoSQL instance accessors
		
		/// <summary>
		/// Get any SalidaAlmacenamientoNoSQL links between a given DataAnalytics and a AlmacenamientoNoSQL.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Compañía.IotDsl.SalidaAlmacenamientoNoSQL> GetLinks( global::Compañía.IotDsl.DataAnalytics source, global::Compañía.IotDsl.AlmacenamientoNoSQL target )
		{
			global::System.Collections.Generic.List<global::Compañía.IotDsl.SalidaAlmacenamientoNoSQL> outLinks = new global::System.Collections.Generic.List<global::Compañía.IotDsl.SalidaAlmacenamientoNoSQL>();
			global::System.Collections.Generic.IList<global::Compañía.IotDsl.SalidaAlmacenamientoNoSQL> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.SalidaAlmacenamientoNoSQL>(source, global::Compañía.IotDsl.SalidaAlmacenamientoNoSQL.DataAnalyticsDomainRoleId);
			foreach ( global::Compañía.IotDsl.SalidaAlmacenamientoNoSQL link in links )
			{
				if ( target.Equals(link.AlmacenamientoNoSQL) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one SalidaAlmacenamientoNoSQL link between a given DataAnalyticsand a AlmacenamientoNoSQL.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Compañía.IotDsl.SalidaAlmacenamientoNoSQL GetLink( global::Compañía.IotDsl.DataAnalytics source, global::Compañía.IotDsl.AlmacenamientoNoSQL target )
		{
			global::System.Collections.Generic.IList<global::Compañía.IotDsl.SalidaAlmacenamientoNoSQL> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.SalidaAlmacenamientoNoSQL>(source, global::Compañía.IotDsl.SalidaAlmacenamientoNoSQL.DataAnalyticsDomainRoleId);
			foreach ( global::Compañía.IotDsl.SalidaAlmacenamientoNoSQL link in links )
			{
				if ( target.Equals(link.AlmacenamientoNoSQL) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace Compañía.IotDsl
{
	/// <summary>
	/// DomainRelationship GrupoDeRecursosTieneVisualizaconDatos
	/// Descripción de Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos
	/// </summary>
	[DslDesign::DisplayNameResource("Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Compañía.IotDsl.IotDslDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("4c110331-ee40-4837-b20a-fae008920df9")]
	public partial class GrupoDeRecursosTieneVisualizaconDatos : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// GrupoDeRecursosTieneVisualizaconDatos domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x4c110331, 0xee40, 0x4837, 0xb2, 0x0a, 0xfa, 0xe0, 0x08, 0x92, 0x0d, 0xf9);
	
				
		/// <summary>
		/// Constructor
		/// Creates a GrupoDeRecursosTieneVisualizaconDatos link in the same Partition as the given GrupoDeRecursos
		/// </summary>
		/// <param name="source">GrupoDeRecursos to use as the source of the relationship.</param>
		/// <param name="target">VisualizaconDatos to use as the target of the relationship.</param>
		public GrupoDeRecursosTieneVisualizaconDatos(GrupoDeRecursos source, VisualizaconDatos target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(GrupoDeRecursosTieneVisualizaconDatos.GrupoDeRecursosDomainRoleId, source), new DslModeling::RoleAssignment(GrupoDeRecursosTieneVisualizaconDatos.VisualizaconDatosDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public GrupoDeRecursosTieneVisualizaconDatos(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public GrupoDeRecursosTieneVisualizaconDatos(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public GrupoDeRecursosTieneVisualizaconDatos(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public GrupoDeRecursosTieneVisualizaconDatos(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region GrupoDeRecursos domain role code
		
		/// <summary>
		/// GrupoDeRecursos domain role Id.
		/// </summary>
		public static readonly global::System.Guid GrupoDeRecursosDomainRoleId = new global::System.Guid(0x3b13c68c, 0xf6eb, 0x4170, 0x88, 0x73, 0x48, 0x7c, 0xc6, 0x3d, 0xf6, 0x4a);
		
		/// <summary>
		/// DomainRole GrupoDeRecursos
		/// Descripción de
		/// Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos.GrupoDeRecursos
		/// </summary>
		[DslDesign::DisplayNameResource("Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos/GrupoDeRecursos.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos/GrupoDeRecursos.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "VisualizaconDatos", PropertyDisplayNameKey="Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos/GrupoDeRecursos.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("3b13c68c-f6eb-4170-8873-487cc63df64a")]
		public virtual GrupoDeRecursos GrupoDeRecursos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (GrupoDeRecursos)DslModeling::DomainRoleInfo.GetRolePlayer(this, GrupoDeRecursosDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, GrupoDeRecursosDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access GrupoDeRecursos of a VisualizaconDatos
		/// <summary>
		/// Gets GrupoDeRecursos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static GrupoDeRecursos GetGrupoDeRecursos(VisualizaconDatos element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, VisualizaconDatosDomainRoleId) as GrupoDeRecursos;
		}
		
		/// <summary>
		/// Sets GrupoDeRecursos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetGrupoDeRecursos(VisualizaconDatos element, GrupoDeRecursos newGrupoDeRecursos)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, VisualizaconDatosDomainRoleId, newGrupoDeRecursos);
		}
		#endregion
		#region VisualizaconDatos domain role code
		
		/// <summary>
		/// VisualizaconDatos domain role Id.
		/// </summary>
		public static readonly global::System.Guid VisualizaconDatosDomainRoleId = new global::System.Guid(0x6a480f1c, 0xdfe1, 0x4b8f, 0x93, 0x30, 0x60, 0x31, 0xc2, 0x55, 0x26, 0xb4);
		
		/// <summary>
		/// DomainRole VisualizaconDatos
		/// Descripción de
		/// Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos.VisualizaconDatos
		/// </summary>
		[DslDesign::DisplayNameResource("Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos/VisualizaconDatos.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos/VisualizaconDatos.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "GrupoDeRecursos", PropertyDisplayNameKey="Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos/VisualizaconDatos.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("6a480f1c-dfe1-4b8f-9330-6031c25526b4")]
		public virtual VisualizaconDatos VisualizaconDatos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (VisualizaconDatos)DslModeling::DomainRoleInfo.GetRolePlayer(this, VisualizaconDatosDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, VisualizaconDatosDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access VisualizaconDatos of a GrupoDeRecursos
		/// <summary>
		/// Gets a list of VisualizaconDatos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<VisualizaconDatos> GetVisualizaconDatos(GrupoDeRecursos element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<VisualizaconDatos>, VisualizaconDatos>(element, GrupoDeRecursosDomainRoleId);
		}
		#endregion
		#region GrupoDeRecursos link accessor
		/// <summary>
		/// Get the list of GrupoDeRecursosTieneVisualizaconDatos links to a GrupoDeRecursos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos> GetLinksToVisualizaconDatos ( global::Compañía.IotDsl.GrupoDeRecursos grupoDeRecursosInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos>(grupoDeRecursosInstance, global::Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos.GrupoDeRecursosDomainRoleId);
		}
		#endregion
		#region VisualizaconDatos link accessor
		/// <summary>
		/// Get the GrupoDeRecursosTieneVisualizaconDatos link to a VisualizaconDatos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos GetLinkToGrupoDeRecursos (global::Compañía.IotDsl.VisualizaconDatos visualizaconDatosInstance)
		{
			global::System.Collections.Generic.IList<global::Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos>(visualizaconDatosInstance, global::Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos.VisualizaconDatosDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of VisualizaconDatos not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region GrupoDeRecursosTieneVisualizaconDatos instance accessors
		
		/// <summary>
		/// Get any GrupoDeRecursosTieneVisualizaconDatos links between a given GrupoDeRecursos and a VisualizaconDatos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos> GetLinks( global::Compañía.IotDsl.GrupoDeRecursos source, global::Compañía.IotDsl.VisualizaconDatos target )
		{
			global::System.Collections.Generic.List<global::Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos> outLinks = new global::System.Collections.Generic.List<global::Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos>();
			global::System.Collections.Generic.IList<global::Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos>(source, global::Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos.GrupoDeRecursosDomainRoleId);
			foreach ( global::Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos link in links )
			{
				if ( target.Equals(link.VisualizaconDatos) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one GrupoDeRecursosTieneVisualizaconDatos link between a given GrupoDeRecursosand a VisualizaconDatos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos GetLink( global::Compañía.IotDsl.GrupoDeRecursos source, global::Compañía.IotDsl.VisualizaconDatos target )
		{
			global::System.Collections.Generic.IList<global::Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos>(source, global::Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos.GrupoDeRecursosDomainRoleId);
			foreach ( global::Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos link in links )
			{
				if ( target.Equals(link.VisualizaconDatos) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace Compañía.IotDsl
{
	/// <summary>
	/// DomainRelationship MessagingasaServiceReferenciasVisualizaconDatos
	/// Descripción de Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos
	/// </summary>
	[DslDesign::DisplayNameResource("Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Compañía.IotDsl.IotDslDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("1c4e51bc-152d-4407-ae7e-80120a0588ea")]
	public partial class MessagingasaServiceReferenciasVisualizaconDatos : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// MessagingasaServiceReferenciasVisualizaconDatos domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x1c4e51bc, 0x152d, 0x4407, 0xae, 0x7e, 0x80, 0x12, 0x0a, 0x05, 0x88, 0xea);
	
				
		/// <summary>
		/// Constructor
		/// Creates a MessagingasaServiceReferenciasVisualizaconDatos link in the same Partition as the given MessagingasaService
		/// </summary>
		/// <param name="source">MessagingasaService to use as the source of the relationship.</param>
		/// <param name="target">VisualizaconDatos to use as the target of the relationship.</param>
		public MessagingasaServiceReferenciasVisualizaconDatos(MessagingasaService source, VisualizaconDatos target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(MessagingasaServiceReferenciasVisualizaconDatos.MessagingasaServiceDomainRoleId, source), new DslModeling::RoleAssignment(MessagingasaServiceReferenciasVisualizaconDatos.VisualizaconDatosDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public MessagingasaServiceReferenciasVisualizaconDatos(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public MessagingasaServiceReferenciasVisualizaconDatos(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public MessagingasaServiceReferenciasVisualizaconDatos(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public MessagingasaServiceReferenciasVisualizaconDatos(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region MessagingasaService domain role code
		
		/// <summary>
		/// MessagingasaService domain role Id.
		/// </summary>
		public static readonly global::System.Guid MessagingasaServiceDomainRoleId = new global::System.Guid(0xd41d141b, 0x94de, 0x43cb, 0xbe, 0x3f, 0xa9, 0x9c, 0x2d, 0x64, 0xd8, 0x6e);
		
		/// <summary>
		/// DomainRole MessagingasaService
		/// Descripción de
		/// Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos.MessagingasaService
		/// </summary>
		[DslDesign::DisplayNameResource("Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos/MessagingasaService.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos/MessagingasaService.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "VisualizaconDatos", PropertyDisplayNameKey="Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos/MessagingasaService.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("d41d141b-94de-43cb-be3f-a99c2d64d86e")]
		public virtual MessagingasaService MessagingasaService
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (MessagingasaService)DslModeling::DomainRoleInfo.GetRolePlayer(this, MessagingasaServiceDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, MessagingasaServiceDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access MessagingasaService of a VisualizaconDatos
		/// <summary>
		/// Gets a list of MessagingasaService.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<MessagingasaService> GetMessagingasaService(VisualizaconDatos element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<MessagingasaService>, MessagingasaService>(element, VisualizaconDatosDomainRoleId);
		}
		#endregion
		#region VisualizaconDatos domain role code
		
		/// <summary>
		/// VisualizaconDatos domain role Id.
		/// </summary>
		public static readonly global::System.Guid VisualizaconDatosDomainRoleId = new global::System.Guid(0xe68be18e, 0x8bf6, 0x4223, 0xad, 0x0e, 0xc7, 0x76, 0x4c, 0xb2, 0xa3, 0xd2);
		
		/// <summary>
		/// DomainRole VisualizaconDatos
		/// Descripción de
		/// Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos.VisualizaconDatos
		/// </summary>
		[DslDesign::DisplayNameResource("Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos/VisualizaconDatos.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos/VisualizaconDatos.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "MessagingasaService", PropertyDisplayNameKey="Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos/VisualizaconDatos.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("e68be18e-8bf6-4223-ad0e-c7764cb2a3d2")]
		public virtual VisualizaconDatos VisualizaconDatos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (VisualizaconDatos)DslModeling::DomainRoleInfo.GetRolePlayer(this, VisualizaconDatosDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, VisualizaconDatosDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access VisualizaconDatos of a MessagingasaService
		/// <summary>
		/// Gets a list of VisualizaconDatos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<VisualizaconDatos> GetVisualizaconDatos(MessagingasaService element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<VisualizaconDatos>, VisualizaconDatos>(element, MessagingasaServiceDomainRoleId);
		}
		#endregion
		#region MessagingasaService link accessor
		/// <summary>
		/// Get the list of MessagingasaServiceReferenciasVisualizaconDatos links to a MessagingasaService.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos> GetLinksToVisualizaconDatos ( global::Compañía.IotDsl.MessagingasaService messagingasaServiceInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos>(messagingasaServiceInstance, global::Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos.MessagingasaServiceDomainRoleId);
		}
		#endregion
		#region VisualizaconDatos link accessor
		/// <summary>
		/// Get the list of MessagingasaServiceReferenciasVisualizaconDatos links to a VisualizaconDatos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos> GetLinksToMessagingasaService ( global::Compañía.IotDsl.VisualizaconDatos visualizaconDatosInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos>(visualizaconDatosInstance, global::Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos.VisualizaconDatosDomainRoleId);
		}
		#endregion
		#region MessagingasaServiceReferenciasVisualizaconDatos instance accessors
		
		/// <summary>
		/// Get any MessagingasaServiceReferenciasVisualizaconDatos links between a given MessagingasaService and a VisualizaconDatos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos> GetLinks( global::Compañía.IotDsl.MessagingasaService source, global::Compañía.IotDsl.VisualizaconDatos target )
		{
			global::System.Collections.Generic.List<global::Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos> outLinks = new global::System.Collections.Generic.List<global::Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos>();
			global::System.Collections.Generic.IList<global::Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos>(source, global::Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos.MessagingasaServiceDomainRoleId);
			foreach ( global::Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos link in links )
			{
				if ( target.Equals(link.VisualizaconDatos) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one MessagingasaServiceReferenciasVisualizaconDatos link between a given MessagingasaServiceand a VisualizaconDatos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos GetLink( global::Compañía.IotDsl.MessagingasaService source, global::Compañía.IotDsl.VisualizaconDatos target )
		{
			global::System.Collections.Generic.IList<global::Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos>(source, global::Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos.MessagingasaServiceDomainRoleId);
			foreach ( global::Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos link in links )
			{
				if ( target.Equals(link.VisualizaconDatos) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
