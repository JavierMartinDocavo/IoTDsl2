//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace Compañía.IotDsl
{
	/// <summary>
	/// DomainClass IotDsl1
	/// The root in which all other elements are embedded. Appears as a diagram.
	/// </summary>
	[DslDesign::DisplayNameResource("Compañía.IotDsl.IotDsl1.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Compañía.IotDsl.IotDsl1.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Compañía.IotDsl.IotDslDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("9d864e78-9706-4d92-8373-e01c4838d0bb")]
	public partial class IotDsl1 : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// IotDsl1 domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x9d864e78, 0x9706, 0x4d92, 0x83, 0x73, 0xe0, 0x1c, 0x48, 0x38, 0xd0, 0xbb);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public IotDsl1(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public IotDsl1(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region GrupoDeRecursos opposite domain role accessor
		
		/// <summary>
		/// Gets a list of GrupoDeRecursos.
		/// Descripción de Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos.IotDsl1
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<GrupoDeRecursos> GrupoDeRecursos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<GrupoDeRecursos>, GrupoDeRecursos>(global::Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos.IotDsl1DomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Compañía.IotDsl.GrupoDeRecursos.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::Compañía.IotDsl.GrupoDeRecursos sourceGrupoDeRecursos1 = sourceElement as global::Compañía.IotDsl.GrupoDeRecursos;
			if (sourceGrupoDeRecursos1 != null)
			{
				// Create link for path IotDsl1TieneGrupoDeRecursos.GrupoDeRecursos
				this.GrupoDeRecursos.Add(sourceGrupoDeRecursos1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::Compañía.IotDsl.GrupoDeRecursos sourceGrupoDeRecursos1 = sourceElement as global::Compañía.IotDsl.GrupoDeRecursos;
			if (sourceGrupoDeRecursos1 != null)
			{
				// Delete link for path IotDsl1TieneGrupoDeRecursos.GrupoDeRecursos
				
				foreach (DslModeling::ElementLink link in global::Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos.GetLinks((global::Compañía.IotDsl.IotDsl1)this, sourceGrupoDeRecursos1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos.IotDsl1DomainRoleId, global::Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos.GrupoDeRecursosDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace Compañía.IotDsl
{
	/// <summary>
	/// DomainClass GrupoDeRecursos
	/// Descripción de Compañía.IotDsl.GrupoDeRecursos
	/// </summary>
	[DslDesign::DisplayNameResource("Compañía.IotDsl.GrupoDeRecursos.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Compañía.IotDsl.GrupoDeRecursos.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Compañía.IotDsl.IotDslDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Nombre = {nombrePropertyStorage})")]
	[DslModeling::DomainObjectId("1e7eb002-c3cd-48ac-b9fb-f25820f421d4")]
	public partial class GrupoDeRecursos : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// GrupoDeRecursos domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x1e7eb002, 0xc3cd, 0x48ac, 0xb9, 0xfb, 0xf2, 0x58, 0x20, 0xf4, 0x21, 0xd4);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public GrupoDeRecursos(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public GrupoDeRecursos(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Nombre domain property code
		
		/// <summary>
		/// Nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreDomainPropertyId = new global::System.Guid(0x6bfedd9f, 0xb33c, 0x414c, 0xa8, 0xa8, 0xd7, 0x07, 0x1f, 0x56, 0xf3, 0xe1);
		
		/// <summary>
		/// Storage for Nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Nombre domain property.
		/// Descripción de Compañía.IotDsl.GrupoDeRecursos.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("Compañía.IotDsl.GrupoDeRecursos/Nombre.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Compañía.IotDsl.GrupoDeRecursos/Nombre.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("6bfedd9f-b33c-414c-a8a8-d7071f56f3e1")]
		public global::System.String Nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the GrupoDeRecursos.Nombre domain property.
		/// </summary>
		internal sealed partial class NombrePropertyHandler : DslModeling::DomainPropertyValueHandler<GrupoDeRecursos, global::System.String>
		{
			private NombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the GrupoDeRecursos.Nombre domain property value handler.
			/// </summary>
			public static readonly NombrePropertyHandler Instance = new NombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the GrupoDeRecursos.Nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(GrupoDeRecursos element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(GrupoDeRecursos element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Location domain property code
		
		/// <summary>
		/// Location domain property Id.
		/// </summary>
		public static readonly global::System.Guid LocationDomainPropertyId = new global::System.Guid(0xc97501cb, 0x4954, 0x4302, 0xbf, 0x95, 0x68, 0x40, 0xe6, 0xd8, 0x31, 0xc1);
		
		/// <summary>
		/// Storage for Location
		/// </summary>
		private Location locationPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of Location domain property.
		/// Descripción de Compañía.IotDsl.GrupoDeRecursos.Location
		/// </summary>
		[DslDesign::DisplayNameResource("Compañía.IotDsl.GrupoDeRecursos/Location.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Compañía.IotDsl.GrupoDeRecursos/Location.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("c97501cb-4954-4302-bf95-6840e6d831c1")]
		public Location Location
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return locationPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				LocationPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the GrupoDeRecursos.Location domain property.
		/// </summary>
		internal sealed partial class LocationPropertyHandler : DslModeling::DomainPropertyValueHandler<GrupoDeRecursos, Location>
		{
			private LocationPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the GrupoDeRecursos.Location domain property value handler.
			/// </summary>
			public static readonly LocationPropertyHandler Instance = new LocationPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the GrupoDeRecursos.Location domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return LocationDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed Location GetValue(GrupoDeRecursos element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.locationPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(GrupoDeRecursos element, Location newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				Location oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.locationPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IotDsl1 opposite domain role accessor
		/// <summary>
		/// Gets or sets IotDsl1.
		/// Descripción de Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos.GrupoDeRecursos
		/// </summary>
		public virtual IotDsl1 IotDsl1
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos.GrupoDeRecursosDomainRoleId) as IotDsl1;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Compañía.IotDsl.IotDsl1TieneGrupoDeRecursos.GrupoDeRecursosDomainRoleId, value);
			}
		}
		#endregion
		#region CentroIoT opposite domain role accessor
		
		/// <summary>
		/// Gets a list of CentroIoT.
		/// Descripción de Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT.GrupoDeRecursos
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<CentroIoT> CentroIoT
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<CentroIoT>, CentroIoT>(global::Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT.GrupoDeRecursosDomainRoleId);
			}
		}
		#endregion
		#region MessagingasaService opposite domain role accessor
		
		/// <summary>
		/// Gets a list of MessagingasaService.
		/// Descripción de
		/// Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService.GrupoDeRecursos
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<MessagingasaService> MessagingasaService
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<MessagingasaService>, MessagingasaService>(global::Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService.GrupoDeRecursosDomainRoleId);
			}
		}
		#endregion
		#region DataAnalytics opposite domain role accessor
		
		/// <summary>
		/// Gets a list of DataAnalytics.
		/// Descripción de Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics.GrupoDeRecursos
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<DataAnalytics> DataAnalytics
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<DataAnalytics>, DataAnalytics>(global::Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics.GrupoDeRecursosDomainRoleId);
			}
		}
		#endregion
		#region AlmacenamientoNoSQL opposite domain role accessor
		
		/// <summary>
		/// Gets a list of AlmacenamientoNoSQL.
		/// Descripción de
		/// Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL.GrupoDeRecursos
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<AlmacenamientoNoSQL> AlmacenamientoNoSQL
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<AlmacenamientoNoSQL>, AlmacenamientoNoSQL>(global::Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL.GrupoDeRecursosDomainRoleId);
			}
		}
		#endregion
		#region VisualizaconDatos opposite domain role accessor
		
		/// <summary>
		/// Gets a list of VisualizaconDatos.
		/// Descripción de
		/// Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos.GrupoDeRecursos
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<VisualizaconDatos> VisualizaconDatos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<VisualizaconDatos>, VisualizaconDatos>(global::Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos.GrupoDeRecursosDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Compañía.IotDsl.CentroIoT.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Compañía.IotDsl.MessagingasaService.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Compañía.IotDsl.DataAnalytics.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Compañía.IotDsl.AlmacenamientoNoSQL.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Compañía.IotDsl.VisualizaconDatos.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::Compañía.IotDsl.CentroIoT sourceCentroIoT1 = sourceElement as global::Compañía.IotDsl.CentroIoT;
			if (sourceCentroIoT1 != null)
			{
				// Create link for path GrupoDeRecursosTieneCentroIoT.CentroIoT
				this.CentroIoT.Add(sourceCentroIoT1);

				return;
			}
				
			global::Compañía.IotDsl.MessagingasaService sourceMessagingasaService2 = sourceElement as global::Compañía.IotDsl.MessagingasaService;
			if (sourceMessagingasaService2 != null)
			{
				// Create link for path GrupoDeRecursosTieneMessagingasaService.MessagingasaService
				this.MessagingasaService.Add(sourceMessagingasaService2);

				return;
			}
				
			global::Compañía.IotDsl.DataAnalytics sourceDataAnalytics3 = sourceElement as global::Compañía.IotDsl.DataAnalytics;
			if (sourceDataAnalytics3 != null)
			{
				// Create link for path GrupoDeRecursosTieneDataAnalytics.DataAnalytics
				this.DataAnalytics.Add(sourceDataAnalytics3);

				return;
			}
				
			global::Compañía.IotDsl.AlmacenamientoNoSQL sourceAlmacenamientoNoSQL4 = sourceElement as global::Compañía.IotDsl.AlmacenamientoNoSQL;
			if (sourceAlmacenamientoNoSQL4 != null)
			{
				// Create link for path GrupoDeRecursosTieneAlmacenamientoNoSQL.AlmacenamientoNoSQL
				this.AlmacenamientoNoSQL.Add(sourceAlmacenamientoNoSQL4);

				return;
			}
				
			global::Compañía.IotDsl.VisualizaconDatos sourceVisualizaconDatos5 = sourceElement as global::Compañía.IotDsl.VisualizaconDatos;
			if (sourceVisualizaconDatos5 != null)
			{
				// Create link for path GrupoDeRecursosTieneVisualizaconDatos.VisualizaconDatos
				this.VisualizaconDatos.Add(sourceVisualizaconDatos5);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::Compañía.IotDsl.CentroIoT sourceCentroIoT1 = sourceElement as global::Compañía.IotDsl.CentroIoT;
			if (sourceCentroIoT1 != null)
			{
				// Delete link for path GrupoDeRecursosTieneCentroIoT.CentroIoT
				
				foreach (DslModeling::ElementLink link in global::Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT.GetLinks((global::Compañía.IotDsl.GrupoDeRecursos)this, sourceCentroIoT1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT.GrupoDeRecursosDomainRoleId, global::Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT.CentroIoTDomainRoleId);
				}

				return;
			}
				
			global::Compañía.IotDsl.MessagingasaService sourceMessagingasaService2 = sourceElement as global::Compañía.IotDsl.MessagingasaService;
			if (sourceMessagingasaService2 != null)
			{
				// Delete link for path GrupoDeRecursosTieneMessagingasaService.MessagingasaService
				
				foreach (DslModeling::ElementLink link in global::Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService.GetLinks((global::Compañía.IotDsl.GrupoDeRecursos)this, sourceMessagingasaService2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService.GrupoDeRecursosDomainRoleId, global::Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService.MessagingasaServiceDomainRoleId);
				}

				return;
			}
				
			global::Compañía.IotDsl.DataAnalytics sourceDataAnalytics3 = sourceElement as global::Compañía.IotDsl.DataAnalytics;
			if (sourceDataAnalytics3 != null)
			{
				// Delete link for path GrupoDeRecursosTieneDataAnalytics.DataAnalytics
				
				foreach (DslModeling::ElementLink link in global::Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics.GetLinks((global::Compañía.IotDsl.GrupoDeRecursos)this, sourceDataAnalytics3))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics.GrupoDeRecursosDomainRoleId, global::Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics.DataAnalyticsDomainRoleId);
				}

				return;
			}
				
			global::Compañía.IotDsl.AlmacenamientoNoSQL sourceAlmacenamientoNoSQL4 = sourceElement as global::Compañía.IotDsl.AlmacenamientoNoSQL;
			if (sourceAlmacenamientoNoSQL4 != null)
			{
				// Delete link for path GrupoDeRecursosTieneAlmacenamientoNoSQL.AlmacenamientoNoSQL
				
				foreach (DslModeling::ElementLink link in global::Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL.GetLinks((global::Compañía.IotDsl.GrupoDeRecursos)this, sourceAlmacenamientoNoSQL4))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL.GrupoDeRecursosDomainRoleId, global::Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL.AlmacenamientoNoSQLDomainRoleId);
				}

				return;
			}
				
			global::Compañía.IotDsl.VisualizaconDatos sourceVisualizaconDatos5 = sourceElement as global::Compañía.IotDsl.VisualizaconDatos;
			if (sourceVisualizaconDatos5 != null)
			{
				// Delete link for path GrupoDeRecursosTieneVisualizaconDatos.VisualizaconDatos
				
				foreach (DslModeling::ElementLink link in global::Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos.GetLinks((global::Compañía.IotDsl.GrupoDeRecursos)this, sourceVisualizaconDatos5))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos.GrupoDeRecursosDomainRoleId, global::Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos.VisualizaconDatosDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace Compañía.IotDsl
{
	/// <summary>
	/// DomainClass CentroIoT
	/// Descripción de Compañía.IotDsl.CentroIoT
	/// </summary>
	[DslDesign::DisplayNameResource("Compañía.IotDsl.CentroIoT.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Compañía.IotDsl.CentroIoT.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Compañía.IotDsl.IotDslDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Nombre = {nombrePropertyStorage})")]
	[DslModeling::DomainObjectId("524e847c-b507-4bd4-9679-f74a7cb0a251")]
	public partial class CentroIoT : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// CentroIoT domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x524e847c, 0xb507, 0x4bd4, 0x96, 0x79, 0xf7, 0x4a, 0x7c, 0xb0, 0xa2, 0x51);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public CentroIoT(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public CentroIoT(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Nombre domain property code
		
		/// <summary>
		/// Nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreDomainPropertyId = new global::System.Guid(0x959df3d1, 0x9ff7, 0x4805, 0x90, 0xd5, 0x8a, 0x01, 0x36, 0x81, 0xb8, 0x95);
		
		/// <summary>
		/// Storage for Nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Nombre domain property.
		/// Descripción de Compañía.IotDsl.CentroIoT.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("Compañía.IotDsl.CentroIoT/Nombre.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Compañía.IotDsl.CentroIoT/Nombre.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("959df3d1-9ff7-4805-90d5-8a013681b895")]
		public global::System.String Nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the CentroIoT.Nombre domain property.
		/// </summary>
		internal sealed partial class NombrePropertyHandler : DslModeling::DomainPropertyValueHandler<CentroIoT, global::System.String>
		{
			private NombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the CentroIoT.Nombre domain property value handler.
			/// </summary>
			public static readonly NombrePropertyHandler Instance = new NombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the CentroIoT.Nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(CentroIoT element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(CentroIoT element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region GrupoDeRecursos opposite domain role accessor
		/// <summary>
		/// Gets or sets GrupoDeRecursos.
		/// Descripción de Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT.CentroIoT
		/// </summary>
		public virtual GrupoDeRecursos GrupoDeRecursos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT.CentroIoTDomainRoleId) as GrupoDeRecursos;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Compañía.IotDsl.GrupoDeRecursosTieneCentroIoT.CentroIoTDomainRoleId, value);
			}
		}
		#endregion
		#region MessagingasaService opposite domain role accessor
		/// <summary>
		/// Gets or sets MessagingasaService.
		/// Descripción de Compañía.IotDsl.CentroIoTReferenciasMessagingasaService.CentroIoT
		/// </summary>
		public virtual MessagingasaService MessagingasaService
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Compañía.IotDsl.CentroIoTReferenciasMessagingasaService.CentroIoTDomainRoleId) as MessagingasaService;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Compañía.IotDsl.CentroIoTReferenciasMessagingasaService.CentroIoTDomainRoleId, value);
			}
		}
		#endregion
		#region DataAnalytics opposite domain role accessor
		
		/// <summary>
		/// Gets a list of DataAnalytics.
		/// Descripción de Compañía.IotDsl.EntradaIotHub.CentroIoT
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<DataAnalytics> DataAnalytics
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<DataAnalytics>, DataAnalytics>(global::Compañía.IotDsl.EntradaIotHub.CentroIoTDomainRoleId);
			}
		}
		#endregion
	}
}
namespace Compañía.IotDsl
{
	/// <summary>
	/// DomainClass MessagingasaService
	/// Descripción de Compañía.IotDsl.MessagingasaService
	/// </summary>
	[DslDesign::DisplayNameResource("Compañía.IotDsl.MessagingasaService.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Compañía.IotDsl.MessagingasaService.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Compañía.IotDsl.IotDslDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Nombre = {nombrePropertyStorage})")]
	[DslModeling::DomainObjectId("502c40ea-c215-459d-b5d2-3544303ebb75")]
	public partial class MessagingasaService : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// MessagingasaService domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x502c40ea, 0xc215, 0x459d, 0xb5, 0xd2, 0x35, 0x44, 0x30, 0x3e, 0xbb, 0x75);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public MessagingasaService(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public MessagingasaService(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Nombre domain property code
		
		/// <summary>
		/// Nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreDomainPropertyId = new global::System.Guid(0x99f50f73, 0xdd49, 0x414c, 0x90, 0x24, 0x8e, 0xe2, 0xed, 0x2a, 0x76, 0xe8);
		
		/// <summary>
		/// Storage for Nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Nombre domain property.
		/// Descripción de Compañía.IotDsl.MessagingasaService.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("Compañía.IotDsl.MessagingasaService/Nombre.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Compañía.IotDsl.MessagingasaService/Nombre.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("99f50f73-dd49-414c-9024-8ee2ed2a76e8")]
		public global::System.String Nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MessagingasaService.Nombre domain property.
		/// </summary>
		internal sealed partial class NombrePropertyHandler : DslModeling::DomainPropertyValueHandler<MessagingasaService, global::System.String>
		{
			private NombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MessagingasaService.Nombre domain property value handler.
			/// </summary>
			public static readonly NombrePropertyHandler Instance = new NombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MessagingasaService.Nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(MessagingasaService element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MessagingasaService element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region GrupoDeRecursos opposite domain role accessor
		/// <summary>
		/// Gets or sets GrupoDeRecursos.
		/// Descripción de
		/// Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService.MessagingasaService
		/// </summary>
		public virtual GrupoDeRecursos GrupoDeRecursos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService.MessagingasaServiceDomainRoleId) as GrupoDeRecursos;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Compañía.IotDsl.GrupoDeRecursosTieneMessagingasaService.MessagingasaServiceDomainRoleId, value);
			}
		}
		#endregion
		#region CentroIoT opposite domain role accessor
		
		/// <summary>
		/// Gets a list of CentroIoT.
		/// Descripción de
		/// Compañía.IotDsl.CentroIoTReferenciasMessagingasaService.MessagingasaService
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<CentroIoT> CentroIoT
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<CentroIoT>, CentroIoT>(global::Compañía.IotDsl.CentroIoTReferenciasMessagingasaService.MessagingasaServiceDomainRoleId);
			}
		}
		#endregion
		#region VisualizaconDatos opposite domain role accessor
		
		/// <summary>
		/// Gets a list of VisualizaconDatos.
		/// Descripción de
		/// Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos.MessagingasaService
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<VisualizaconDatos> VisualizaconDatos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<VisualizaconDatos>, VisualizaconDatos>(global::Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos.MessagingasaServiceDomainRoleId);
			}
		}
		#endregion
	}
}
namespace Compañía.IotDsl
{
	/// <summary>
	/// DomainClass DataAnalytics
	/// Descripción de Compañía.IotDsl.DataAnalytics
	/// </summary>
	[DslDesign::DisplayNameResource("Compañía.IotDsl.DataAnalytics.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Compañía.IotDsl.DataAnalytics.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Compañía.IotDsl.IotDslDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Nombre = {nombrePropertyStorage})")]
	[DslModeling::DomainObjectId("dbb924e1-8eab-4b63-9737-df3450bac2b5")]
	public partial class DataAnalytics : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// DataAnalytics domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xdbb924e1, 0x8eab, 0x4b63, 0x97, 0x37, 0xdf, 0x34, 0x50, 0xba, 0xc2, 0xb5);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DataAnalytics(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DataAnalytics(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Nombre domain property code
		
		/// <summary>
		/// Nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreDomainPropertyId = new global::System.Guid(0x615c4f2d, 0x2c1d, 0x42ad, 0xb3, 0x71, 0xcc, 0x03, 0xa5, 0x95, 0x3a, 0x59);
		
		/// <summary>
		/// Storage for Nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Nombre domain property.
		/// Descripción de Compañía.IotDsl.DataAnalytics.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("Compañía.IotDsl.DataAnalytics/Nombre.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Compañía.IotDsl.DataAnalytics/Nombre.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("615c4f2d-2c1d-42ad-b371-cc03a5953a59")]
		public global::System.String Nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DataAnalytics.Nombre domain property.
		/// </summary>
		internal sealed partial class NombrePropertyHandler : DslModeling::DomainPropertyValueHandler<DataAnalytics, global::System.String>
		{
			private NombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DataAnalytics.Nombre domain property value handler.
			/// </summary>
			public static readonly NombrePropertyHandler Instance = new NombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DataAnalytics.Nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(DataAnalytics element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DataAnalytics element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region GrupoDeRecursos opposite domain role accessor
		/// <summary>
		/// Gets or sets GrupoDeRecursos.
		/// Descripción de Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics.DataAnalytics
		/// </summary>
		public virtual GrupoDeRecursos GrupoDeRecursos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics.DataAnalyticsDomainRoleId) as GrupoDeRecursos;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Compañía.IotDsl.GrupoDeRecursosTieneDataAnalytics.DataAnalyticsDomainRoleId, value);
			}
		}
		#endregion
		#region CentroIoT opposite domain role accessor
		
		/// <summary>
		/// Gets a list of CentroIoT.
		/// Descripción de Compañía.IotDsl.EntradaIotHub.DataAnalytics
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<CentroIoT> CentroIoT
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<CentroIoT>, CentroIoT>(global::Compañía.IotDsl.EntradaIotHub.DataAnalyticsDomainRoleId);
			}
		}
		#endregion
		#region AlmacenamientoNoSQL opposite domain role accessor
		
		/// <summary>
		/// Gets a list of AlmacenamientoNoSQL.
		/// Descripción de Compañía.IotDsl.SalidaAlmacenamientoNoSQL.DataAnalytics
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<AlmacenamientoNoSQL> AlmacenamientoNoSQL
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<AlmacenamientoNoSQL>, AlmacenamientoNoSQL>(global::Compañía.IotDsl.SalidaAlmacenamientoNoSQL.DataAnalyticsDomainRoleId);
			}
		}
		#endregion
	}
}
namespace Compañía.IotDsl
{
	/// <summary>
	/// DomainClass AlmacenamientoNoSQL
	/// Descripción de Compañía.IotDsl.AlmacenamientoNoSQL
	/// </summary>
	[DslDesign::DisplayNameResource("Compañía.IotDsl.AlmacenamientoNoSQL.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Compañía.IotDsl.AlmacenamientoNoSQL.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Compañía.IotDsl.IotDslDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Nombre = {nombrePropertyStorage})")]
	[DslModeling::DomainObjectId("2550ba79-9968-4db2-8faa-931a835ebec9")]
	public partial class AlmacenamientoNoSQL : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// AlmacenamientoNoSQL domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x2550ba79, 0x9968, 0x4db2, 0x8f, 0xaa, 0x93, 0x1a, 0x83, 0x5e, 0xbe, 0xc9);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public AlmacenamientoNoSQL(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public AlmacenamientoNoSQL(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Nombre domain property code
		
		/// <summary>
		/// Nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreDomainPropertyId = new global::System.Guid(0xa4cb77e1, 0xdac9, 0x4a4b, 0x87, 0xe7, 0xb9, 0x6a, 0x61, 0xac, 0xa5, 0xc0);
		
		/// <summary>
		/// Storage for Nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Nombre domain property.
		/// Descripción de Compañía.IotDsl.AlmacenamientoNoSQL.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("Compañía.IotDsl.AlmacenamientoNoSQL/Nombre.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Compañía.IotDsl.AlmacenamientoNoSQL/Nombre.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("a4cb77e1-dac9-4a4b-87e7-b96a61aca5c0")]
		public global::System.String Nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the AlmacenamientoNoSQL.Nombre domain property.
		/// </summary>
		internal sealed partial class NombrePropertyHandler : DslModeling::DomainPropertyValueHandler<AlmacenamientoNoSQL, global::System.String>
		{
			private NombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the AlmacenamientoNoSQL.Nombre domain property value handler.
			/// </summary>
			public static readonly NombrePropertyHandler Instance = new NombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the AlmacenamientoNoSQL.Nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(AlmacenamientoNoSQL element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(AlmacenamientoNoSQL element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region GrupoDeRecursos opposite domain role accessor
		/// <summary>
		/// Gets or sets GrupoDeRecursos.
		/// Descripción de
		/// Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL.AlmacenamientoNoSQL
		/// </summary>
		public virtual GrupoDeRecursos GrupoDeRecursos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL.AlmacenamientoNoSQLDomainRoleId) as GrupoDeRecursos;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Compañía.IotDsl.GrupoDeRecursosTieneAlmacenamientoNoSQL.AlmacenamientoNoSQLDomainRoleId, value);
			}
		}
		#endregion
		#region DataAnalytics opposite domain role accessor
		
		/// <summary>
		/// Gets a list of DataAnalytics.
		/// Descripción de Compañía.IotDsl.SalidaAlmacenamientoNoSQL.AlmacenamientoNoSQL
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<DataAnalytics> DataAnalytics
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<DataAnalytics>, DataAnalytics>(global::Compañía.IotDsl.SalidaAlmacenamientoNoSQL.AlmacenamientoNoSQLDomainRoleId);
			}
		}
		#endregion
	}
}
namespace Compañía.IotDsl
{
	/// <summary>
	/// DomainClass VisualizaconDatos
	/// Descripción de Compañía.IotDsl.VisualizaconDatos
	/// </summary>
	[DslDesign::DisplayNameResource("Compañía.IotDsl.VisualizaconDatos.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Compañía.IotDsl.VisualizaconDatos.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Compañía.IotDsl.IotDslDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Nombre = {nombrePropertyStorage})")]
	[DslModeling::DomainObjectId("36fbb5ab-3889-4ec1-a5b2-7ba2a8a5255c")]
	public partial class VisualizaconDatos : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// VisualizaconDatos domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x36fbb5ab, 0x3889, 0x4ec1, 0xa5, 0xb2, 0x7b, 0xa2, 0xa8, 0xa5, 0x25, 0x5c);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public VisualizaconDatos(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public VisualizaconDatos(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Nombre domain property code
		
		/// <summary>
		/// Nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreDomainPropertyId = new global::System.Guid(0x1633388e, 0xcbbf, 0x4bc1, 0xb9, 0x04, 0x31, 0x07, 0xb6, 0xf9, 0x0f, 0xf8);
		
		/// <summary>
		/// Storage for Nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Nombre domain property.
		/// Descripción de Compañía.IotDsl.VisualizaconDatos.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("Compañía.IotDsl.VisualizaconDatos/Nombre.DisplayName", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Compañía.IotDsl.VisualizaconDatos/Nombre.Description", typeof(global::Compañía.IotDsl.IotDslDomainModel), "Compañía.IotDsl.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("1633388e-cbbf-4bc1-b904-3107b6f90ff8")]
		public global::System.String Nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the VisualizaconDatos.Nombre domain property.
		/// </summary>
		internal sealed partial class NombrePropertyHandler : DslModeling::DomainPropertyValueHandler<VisualizaconDatos, global::System.String>
		{
			private NombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the VisualizaconDatos.Nombre domain property value handler.
			/// </summary>
			public static readonly NombrePropertyHandler Instance = new NombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the VisualizaconDatos.Nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(VisualizaconDatos element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(VisualizaconDatos element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region GrupoDeRecursos opposite domain role accessor
		/// <summary>
		/// Gets or sets GrupoDeRecursos.
		/// Descripción de
		/// Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos.VisualizaconDatos
		/// </summary>
		public virtual GrupoDeRecursos GrupoDeRecursos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos.VisualizaconDatosDomainRoleId) as GrupoDeRecursos;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Compañía.IotDsl.GrupoDeRecursosTieneVisualizaconDatos.VisualizaconDatosDomainRoleId, value);
			}
		}
		#endregion
		#region MessagingasaService opposite domain role accessor
		
		/// <summary>
		/// Gets a list of MessagingasaService.
		/// Descripción de
		/// Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos.VisualizaconDatos
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<MessagingasaService> MessagingasaService
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<MessagingasaService>, MessagingasaService>(global::Compañía.IotDsl.MessagingasaServiceReferenciasVisualizaconDatos.VisualizaconDatosDomainRoleId);
			}
		}
		#endregion
	}
}
